}
View(wt)
for(i in c(1:nrow(ap))){
for(j in c(1:nrow(wt)))
ap$dr.wt[i]<-ifelse(ap$id[i]==wt$id[j] & ap$plot[i]==wt$plot[j], wt$dr.wt[j], ap$dr.wt[i])
}
ap<-ap[!duplicated(ap$id),]
View(xx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# Set Working Directory
setwd("~/Documents/git/CGtraits")
a<-read.csv("scans/Processed/Perim&Area.csv", header=TRUE)
b<-read.csv("scans/Processed/Results.csv", header=TRUE)
x<-full_join(a, b)
c<-read.csv("scans/Processed/Results2.csv", header=TRUE)
x<-full_join(x, c)
d<-read.csv("scans/Processed/Results3.csv", header=TRUE)
x<-full_join(x, d)
e<-read.csv("scans/Processed/resultsBETPOPS.csv", header=TRUE)
x<-full_join(x, e)
f<-read.csv("scans/Processed/ResultsDIELON.csv", header=TRUE)
x<-full_join(x, f)
g<-read.csv("scans/Processed/ResultsMYRGAL.csv", header=TRUE)
x<-full_join(x, g)
h<-read.csv("scans/Processed/ResultsSAMRAC2.csv", header=TRUE)
x<-full_join(x, h)
i<-read.csv("scans/Processed/ResultsSORAME.csv", header=TRUE)
x<-full_join(x, i)
j<-read.csv("scans/Processed/ResultsSPIALB.csv", header=TRUE)
x<-full_join(x, j)
k<-read.csv("scans/Processed/ResultsSPITOM.csv", header=TRUE)
x<-full_join(x, k)
l<-read.csv("scans/Processed/ResultsVIBCAS.csv", header=TRUE)
x<-full_join(x, l)
m<-read.csv("scans/Processed/SAMRACResults.csv", header=TRUE)
x<-full_join(x, m)
dups<-x[duplicated(x$Label),]
xx<-x[!duplicated(x$Label),]
xx$Label<-gsub('.jpg','',xx$Label)
xx$Label<-gsub('.jpeg','',xx$Label)
xx<-subset(xx, select=c("Label", "Area", "Perim.", "Angle", "X.1"))
xx<-xx[!(xx$Label=="DIELON_SH_4_P7"),]
xx$Label<-ifelse(xx$Label=="VACMYR_10C_1_P13", "VACMYR_GR_10C_1_P13", xx$Label)
xx$Label<-ifelse(xx$Label=="VACMYR_10C_2_P13", "VACMYR_GR_10C_2_P13", xx$Label)
xx$Label<-ifelse(xx$Label=="QUERUB_9_GR_1_P5", "QUERUB_GR_9_1_P5", xx$Label)
xx$Label<-ifelse(xx$Label=="QUERUB_9_GR_2_P5", "QUERUB_GR_9_2_P5", xx$Label)
xx$Angle<-ifelse(xx$Angle==0, NA, xx$Angle)
xx$X.1<-ifelse(xx$X.1==0, NA, xx$X.1)
xx$species<-substr(xx$Label, 0,6)
xx$Perim.<-ifelse(xx$species=="SAMRAC" & !(is.na(xx$X.1)), xx$X.1, xx$Perim.)
xx$Perim.<-ifelse(xx$species=="SORAME" & !(is.na(xx$Angle)), xx$Angle, xx$Perim.)
ap<-subset(xx, select=c("Label", "Area", "Perim.", "species"))
ap<-ap%>%rename(id=Label)%>%rename(area=Area)%>%rename(perim=Perim.)
ap$site<-substr(ap$id, 8,9)
ap$plot<-as.numeric(gsub(".*_P","",ap$id))
ap$id<-gsub('_P.*','',ap$id)
ap$id<-ifelse(ap$id=="ALNINC_SH_06_1", "ALNINC_SH_6_1", ap$id)
ap$id<-ifelse(ap$id=="ALNINC_SH_06_2", "ALNINC_SH_6_2", ap$id)
ap$id<-ifelse(ap$id=="BETPAP_SH_1_1", "BETPAP_SH_1B_1", ap$id)
ap$id<-ifelse(ap$id=="BETPAP_SH_1_2", "BETPAP_SH_1B_2", ap$id)
ap<-ap[!(ap$id=="SPITOM_GR_1_1" & ap$plot==11),]
ap<-ap[!(ap$id=="SPITOM_GR_1_2" & ap$plot==11),]
ap$id<-ifelse(ap$id=="SPITOM_GR_2D_1", "SPITOM_GR_2E_1", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2D_2", "SPITOM_GR_2E_2", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2C_1", "SPITOM_GR_2D_1", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2C_2", "SPITOM_GR_2D_2", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2B_1", "SPITOM_GR_2C_1", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2B_2", "SPITOM_GR_2C_2", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2A_1", "SPITOM_GR_2B_1", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_GR_2A_2", "SPITOM_GR_2B_2", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_SH_99_1" & ap$plot==11, "SPITOM_SH_99F_1", ap$id)
ap$id<-ifelse(ap$id=="SPITOM_SH_99_2" & ap$plot==11, "SPITOM_SH_99F_2", ap$id)
ap$id<-ifelse(ap$id=="VIBCAS_SH_1_1" & ap$plot==8, "VIBCAS_SH_1A_1", ap$id)
ap$id<-ifelse(ap$id=="VIBCAS_SH_1_2" & ap$plot==8, "VIBCAS_SH_1A_2", ap$id)
ap$ind<-NA
ap$ind<-ifelse(ap$site=="HF", gsub('.*HF_','',ap$id), ap$ind)
ap$ind<-ifelse(ap$site=="GR", gsub('.*GR_','',ap$id), ap$ind)
ap$ind<-ifelse(ap$site=="SH", gsub('.*SH_','',ap$id), ap$ind)
ap$ind<-ifelse(ap$site=="WM", gsub('.*WM_','',ap$id), ap$ind)
ap$leaf<-gsub(".*_","",ap$ind)
ap$ind<-gsub("_.*","",ap$ind)
### Load Weight Data ###
wt<-read.csv("analyses/input/CG_SLA.csv", header=TRUE)
wt$label<-paste(wt$IND, wt$Plot)
wt<-wt[!duplicated(wt$label),]
wt<-wt%>%rename(id=IND)%>%rename(plot=Plot)%>%rename(wet.wt=Wet.Weight)%>%rename(dr.wt=Dry.Mass)
wt<-subset(wt, select=c("id","plot", "wet.wt", "dr.wt"))
wt$plot<-as.numeric(wt$plot)
wt$id<-ifelse(wt$id=="*SPITOM_GR_2E_1***mislabeld coin envelope", "SPITOM_GR_2E_1", wt$id)
wt$id<-ifelse(wt$id=="**SPITOM_GR_2E_2", "SPITOM_GR_2E_2", wt$id)
wt$id<-ifelse(wt$id=="SPITOM_GR_2D_1 - change from C to D!", "SPITOM_GR_2D_1", wt$id)
wt$id<-ifelse(wt$id=="SPITOM_GR_2D_2 - change from C to D!!", "SPITOM_GR_2D_2", wt$id)
wt$id<-ifelse(wt$id=="SPITOM_GR_2B_1", "SPITOM_GR_2C_1", wt$id)
wt$id<-ifelse(wt$id=="SPITOM_GR_2B_2", "SPITOM_GR_2C_2", wt$id)
wt$id<-ifelse(wt$id=="SPITOM_GR_2A_1", "SPITOM_GR_2B_1", wt$id)
wt$id<-ifelse(wt$id=="SPITOM_GR_2A_1", "SPITOM_GR_2B_1", wt$id)
ap$wet.wt<-NA
ap$dr.wt<-NA
for(i in c(1:nrow(ap))){
for(j in c(1:nrow(wt)))
ap$wet.wt[i]<-ifelse(ap$id[i]==wt$id[j] & ap$plot[i]==wt$plot[j], wt$wet.wt[j], ap$wet.wt[i])
}
for(i in c(1:nrow(ap))){
for(j in c(1:nrow(wt)))
ap$dr.wt[i]<-ifelse(ap$id[i]==wt$id[j] & ap$plot[i]==wt$plot[j], wt$dr.wt[j], ap$dr.wt[i])
}
write.csv(ap, file="~/Documents/git/CGtraits/analyses/output/clean_traits.csv", row.names = FALSE)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses/input")
d <-read.csv("2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$second=="9" | dx$third=="9", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
drisk$bb<-ave(drisk$bb, drisk$Ind, drisk$Plot, FUN=min)
warnings
warnings()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses/input")
d <-read.csv("2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$second=="9" | dx$third=="9", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
drisk$budburst<-ave(drisk$bb, drisk$Ind, drisk$Plot, FUN=min)
class(drisk$bb)
drisk$budburst<-ave(drisk$bb, drisk$Ind, drisk$Plot, FUN=first)
drisk$leafout<- ave(drisk$lo, drisk$Ind, drisk$Plot, FUN=first)
drisk<-subset(drisk, select=c("Ind", "Plot", "species", "budburst", "leafout"))
drisk<-drisk[!duplicated(drisk),]
View(drisk)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
drisk$budburst<-ave(drisk$bb, drisk$Ind, drisk$Plot, FUN=first)
drisk$leafout<- ave(drisk$lo, drisk$Ind, drisk$Plot, FUN=first)
drisk<-subset(drisk, select=c("Ind", "Plot", "species", "budburst", "leafout"))
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
drisk$budburst<-ave(drisk$bb, drisk$Ind, drisk$Plot, FUN=first)
drisk$leafout<- ave(drisk$lo, drisk$Ind, drisk$Plot, FUN=first)
risky<-drisk[!duplicated(drisk$Ind),]
View(risky)
risky$label<-paste(drisk$Ind, drisk$Plot)
risky<-drisk
risky$label<-paste(risky$Ind, risky$Plot)
risky<-risky[!duplicated(risky$label),]
View(risky)
dvr<-subset(risky, select=c("Ind", "Plot"))
View(dvr)
dvr<-dvr[!duplicated(dvr),]
dvr$budburst<-NA
for(i in c(1:nrow(dvr))){
for(j in c(1:nrow(drisk)))
dvr$budburst[i]<-ifelse(dvr$Ind[i]==drisk$Ind[j] & dvr$Plot[i]==drisk$Plot[j], drisk$budburst[j], dvr$budburst[i])
}
dvr$leafout<-NA
for(i in c(1:nrow(dvr))){
for(j in c(1:nrow(drisk)))
dvr$leafout[i]<-ifelse(dvr$Ind[i]==drisk$Ind[j] & dvr$Plot[i]==drisk$Plot[j], drisk$leafout[j], dvr$leafout[i])
}
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
View(drisk)
drisk$budburst<-ave(drisk$bb, drisk$Ind, drisk$Plot, FUN=first)
drisk$leafout<- ave(drisk$lo, drisk$Ind, drisk$Plot, FUN=first)
class(drisk$lo)
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(drisk$lo, drisk$Ind, drisk$Plot, FUN=first)
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
View(bb)
View(lo)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses/input")
d <-read.csv("2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$second=="9" | dx$third=="9", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
bb<-subset(bb, select=c("Ind", "Plot", "budburst"))
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
lo<-subset(lo, select=c("Ind", "Plot", "leafout"))
View(bb)
lo<-lo[!duplicated(lo),]
bb<-bb[!duplicated(bb),]
View(dx)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses/input")
d <-read.csv("2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$first=="11" | dx$second=="9" | dx$second=="11" | dx$third=="9" | dx$third=="11", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
bb<-subset(bb, select=c("Ind", "Plot", "budburst"))
bb<-bb[!duplicated(bb),]
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
lo<-subset(lo, select=c("Ind", "Plot", "leafout"))
lo<-lo[!duplicated(lo),]
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses/input")
d <-read.csv("2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$first=="11" | dx$second=="9" | dx$second=="11" | dx$third=="9" | dx$third=="11",
| dx$first=="15" | dx$second=="15" | dx$third=="15", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
bb<-subset(bb, select=c("Ind", "Plot", "budburst"))
bb<-bb[!duplicated(bb),]
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
lo<-subset(lo, select=c("Ind", "Plot", "leafout"))
lo<-lo[!duplicated(lo),]
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses/input")
d <-read.csv("2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$first=="11" | dx$second=="9" | dx$second=="11" | dx$third=="9" | dx$third=="11"
| dx$first=="15" | dx$second=="15" | dx$third=="15", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
bb<-subset(bb, select=c("Ind", "Plot", "budburst"))
bb<-bb[!duplicated(bb),]
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
lo<-subset(lo, select=c("Ind", "Plot", "leafout"))
lo<-lo[!duplicated(lo),]
dvr<-full_join(bb, lo)
View(dvr)
dvr$risk<-dvr$lo-dvr$bb
dvr$risk<-dvr$leafout-dvr$budburst
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses")
d <-read.csv("input/2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$first=="11" | dx$second=="9" | dx$second=="11" | dx$third=="9" | dx$third=="11"
| dx$first=="15" | dx$second=="15" | dx$third=="15", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
bb<-subset(bb, select=c("Ind", "Plot", "budburst"))
bb<-bb[!duplicated(bb),]
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
lo<-subset(lo, select=c("Ind", "Plot", "leafout"))
lo<-lo[!duplicated(lo),]
dvr<-full_join(bb, lo)
dvr$risk<-dvr$leafout-dvr$budburst
### Let's add in traits data now!###
### Let's add in traits data now!###
traits<-read.csv("output/clean_traits.csv", header=TRUE)
View(traits)
pi
traits$d.index<-traits$perim/(2*sqrt(traits$area*pi))
traits$Ind<-paste(traits$species, traits$site, traits$ind, traits$plot, sep="_")
traits$d.index<-ave(traits$d.index, traits$Ind)
dvr$Ind<-paste(dvr$Ind, dvr$plot, sep="_")
test<-full_join(dvr, traits)
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
graphics.off()
# Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
library(lubridate)
# Set Working Directory
setwd("~/Documents/git/CGtraits/analyses")
d <-read.csv("input/2018_CG_datasheet.csv", header=TRUE)
## Clean data
df<-gather(d, "date","bbch", -Ind, -Plot)
df<-na.omit(df)
df$date<-substr(df$date, 2,8)
df$date<-as.character(as.Date(df$date,"%m.%d.%y"))
df$doy<-yday(df$date)
df$species<-substr(df$Ind, 0,6)
df<-dplyr::select(df, -date)
df$species<-ifelse(df$species=="betpap", "BETPAP", df$species)
df$bbch<-gsub(",", " ", df$bbch, fixed=TRUE)
df<-df[!(df$bbch==""),]
dx<-separate(df, bbch, into = c("first", "second"), sep = " (?=[^ ]+$)")
dx<-separate(dx, first, into = c("first", "third"), sep = " (?=[^ ]+$)")
dx$bb<-NA
dx$bb<-ifelse(dx$first=="9" | dx$first=="11" | dx$second=="9" | dx$second=="11" | dx$third=="9" | dx$third=="11"
| dx$first=="15" | dx$second=="15" | dx$third=="15", dx$doy, dx$bb)
dx$lo<-NA
dx$lo<-ifelse(dx$first=="19" | dx$second=="19" | dx$third=="19", dx$doy, dx$lo)
drisk<-dx%>%dplyr::select(Ind, Plot, bb, lo, species)
drisk<-drisk[!(is.na(drisk$bb) & is.na(drisk$lo)),]
bb<-drisk[!is.na(drisk$bb),]
bb$budburst<-ave(bb$bb, bb$Ind, bb$Plot, FUN=first)
bb<-subset(bb, select=c("Ind", "Plot", "budburst"))
bb<-bb[!duplicated(bb),]
lo<-drisk[!is.na(drisk$lo),]
lo$leafout<- ave(lo$lo, lo$Ind, lo$Plot, FUN=first)
lo<-subset(lo, select=c("Ind", "Plot", "leafout"))
lo<-lo[!duplicated(lo),]
dvr<-full_join(bb, lo)
dvr$risk<-dvr$leafout-dvr$budburst
### Let's add in traits data now!###
traits<-read.csv("output/clean_traits.csv", header=TRUE)
traits$d.index<-traits$perim/(2*sqrt(traits$area*pi))
traits$Ind<-paste(traits$species, traits$site, traits$ind, traits$plot, sep="_")
traits$d.index<-ave(traits$d.index, traits$Ind)
dvr$Ind<-paste(dvr$Ind, dvr$Plot, sep="_")
test<-full_join(dvr, traits)
View(test)
library(rstanarm)
fit<-stan_glmer(dvr~d.index+budburst+(d.index+budburst|species), data=dvr)
fit<-stan_glmer(dvr~d.index+budburst+(d.index+budburst|species), data=test)
fit<-stan_glmer(risk~d.index+budburst+(d.index+budburst|species), data=test)
test<-subset(test, select=c("risk", "Ind", "budburst", "d.index", "species"))
test<-test[!duplicated(test),]
fit<-stan_glmer(risk~d.index+budburst+(d.index+budburst|species), data=test)
fit
fit<-stan_glmer(risk~d.index+budburst+(d.index+budburst|species), data=test, family=poisson)
test$risk<-as.integer(test$risk)
fit<-stan_glmer(risk~d.index+budburst+(d.index+budburst|species), data=test, family=poisson)
pp_check(fit)
test$risk<-test[!(test$risk<0),]
test<-test[!(test$risk<0),]
test$risk<-as.integer(test$risk)
fit<-stan_glmer(risk~d.index+budburst+(d.index+budburst|species), data=test, family=poisson)
fit
pp_check(fit)
fit2<-stan_glmer(budburst~d.index+(1|species), data=test)
fit2
fit2<-stan_glmer(risk~d.index+(1|species), data=test)
fit2
fit<-stan_glmer(risk~d.index+budburst+(d.index+budburst|species), data=test)
fit
library(brms)
fit.brm<-brm(risk~d.index+budburst+(d.index+budburst|species), data=test)
fit.brm
